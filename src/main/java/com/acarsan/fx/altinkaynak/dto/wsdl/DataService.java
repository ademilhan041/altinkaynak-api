package com.acarsan.fx.altinkaynak.dto.wsdl;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "DataService", targetNamespace = "http://data.altinkaynak.com/", wsdlLocation = "http://data.altinkaynak.com/DataService.asmx?wsdl")
public class DataService
        extends Service {

    private final static URL DATASERVICE_WSDL_LOCATION;
    private final static WebServiceException DATASERVICE_EXCEPTION;
    private final static QName DATASERVICE_QNAME = new QName("http://data.altinkaynak.com/", "DataService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://data.altinkaynak.com/DataService.asmx?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        DATASERVICE_WSDL_LOCATION = url;
        DATASERVICE_EXCEPTION = e;
    }

    public DataService() {
        super(__getWsdlLocation(), DATASERVICE_QNAME);
    }

    public DataService(WebServiceFeature... features) {
        super(__getWsdlLocation(), DATASERVICE_QNAME, features);
    }

    public DataService(URL wsdlLocation) {
        super(wsdlLocation, DATASERVICE_QNAME);
    }

    public DataService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DATASERVICE_QNAME, features);
    }

    public DataService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DataService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns DataServiceSoap
     */
    @WebEndpoint(name = "DataServiceSoap")
    public DataServiceSoap getDataServiceSoap() {
        return super.getPort(new QName("http://data.altinkaynak.com/", "DataServiceSoap"), DataServiceSoap.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns DataServiceSoap
     */
    @WebEndpoint(name = "DataServiceSoap")
    public DataServiceSoap getDataServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://data.altinkaynak.com/", "DataServiceSoap"), DataServiceSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DATASERVICE_EXCEPTION != null) {
            throw DATASERVICE_EXCEPTION;
        }
        return DATASERVICE_WSDL_LOCATION;
    }
}
